{"version":3,"file":"global-store.es2015.js","sources":["../src/index.ts"],"sourcesContent":["const globalState: any = {}\n\n/**\n * Gets a value.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * @param defaultValue Optional default value.\n */\nexport function get<T>(id: string | symbol, defaultValue?: T): T {\n  return globalState[id] = globalState[id] || defaultValue\n}\n\n/**\n * Set a value\n */\nexport function set(id: string | symbol, value: any) {\n  globalState[id] = value\n}\n\n/**\n * Creates a store of type T.\n */\nexport default function create<T>(id: string | symbol, defaultValue?: T): Store<T> {\n  return {\n    get() {\n      return get<T>(id, defaultValue)\n    },\n    set(value: T) {\n      set(id, value)\n    }\n  }\n}\n\nexport interface Store<T> {\n  get(): T\n  set(value: T): void\n}\n"],"names":["id","defaultValue","globalState","value","[object Object]","get","set"],"mappings":"yBAYA,YAAuBA,EAAqBC,GAC1C,MAAOC,GAAYF,GAAME,EAAYF,IAAOC,EAM9C,WAAoBD,EAAqBG,GACvCD,EAAYF,GAAMG,EAMpB,WAAkCH,EAAqBC,GACrD,OACEG,MACE,MAAOC,GAAOL,EAAIC,IAEpBG,IAAID,GACFG,EAAIN,EAAIG,KAhCd,KAAMD"}