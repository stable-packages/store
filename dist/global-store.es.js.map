{"version":3,"file":"global-store.es.js","sources":["../src/util.ts","../src/createStore.ts","../src/createAsyncStore.ts","../src/errors.ts","../src/createReadonlyStore.ts"],"sourcesContent":["import { StoreInitializer, StoreValue } from './types';\nimport { StoreId, Stores } from './typesInternal';\n\nexport function getStoreValue(stores: Stores, id: StoreId): any {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  return moduleStore[id.key as any].value\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, initializer: StoreInitializer<T>) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const store = moduleStore[id.key as any]\n  const init = initializer(store && store.init || {})\n  moduleStore[id.key as any] = { init, value: createStoreValue(init) }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  moduleStore[id.key as any].value = createStoreValue(moduleStore[id.key as any].init)\n}\n\nexport function getModuleStore(stores: Stores, moduleName: string) {\n  return stores[moduleName] = stores[moduleName] || {}\n}\n\nexport function createStoreValue(initialValue: any) {\n  return { ...initialValue }\n}\n","import { StoreInitializer, StoreValue } from './types';\nimport { Stores } from './typesInternal';\nimport { getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * Gets value from the store.\n   */\n  get(): T\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param initializer Initializing function for the store\n */\nexport function createStore<\n  T extends StoreValue\n>(moduleName: string, key: string | symbol, initializer: StoreInitializer<T>): Store<T> {\n  initStoreValue(stores, { moduleName, key }, initializer)\n\n  return {\n    get: () => getStoreValue(stores, { moduleName, key }),\n    reset: () => resetStoreValue(stores, { moduleName, key })\n  }\n}\n","import { createStore, Store } from './createStore';\nimport { StoreInitializer, StoreValue } from './types';\n\nconst asyncStoreCreators: Record<string, Record<string | symbol, Array<StoreCreator>>> = {}\n\ntype StoreCreator = {\n  version: string | number,\n  resolve: (store: Store<any>) => void,\n  initializer: StoreInitializer<any>\n}\n\n/**\n * Creates a store of type T asychronously.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param version Version of the store. It can be numeric or string in the format of \"major.minor.patch\".\n * No other string format is accepted.\n * When it is numeric, it is compare to the patch number of the string version,\n * if there is a mix of number and string versions.\n * @param initializer Initializing function for the store\n */\nexport async function createAsyncStore<\n  T extends StoreValue,\n  V extends string | number\n>(moduleName: string, key: string | symbol, version: V, initializer: StoreInitializer<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n */\nexport function initializeAsyncStore(moduleName: string, key?: string | symbol) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (!key) {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators)\n    })\n  }\n  else {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators)\n  }\n}\n\nfunction resolveCreators(moduleName: string, key: string | symbol, storeCreators: Array<StoreCreator>) {\n  sortByVersion(storeCreators).forEach(({ resolve, initializer }) => resolve(createStore(moduleName, key, initializer)))\n}\n\nfunction sortByVersion(storeCreators: Array<StoreCreator>) {\n  return storeCreators.sort((a, b) => compareVersion(\n    typeof a.version === 'number' ? `0.0.${a.version}` : a.version,\n    typeof b.version === 'number' ? `0.0.${b.version}` : b.version)\n  )\n}\n\nfunction compareVersion(a: string, b: string) {\n  const v1 = a.split('.').map(v => Number(v))\n  const v2 = b.split('.').map(v => Number(v))\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] :\n      v1[2] - v2[2]\n}\n","export class Prohibited extends Error {\n  constructor(public moduleName: string, public action: string) {\n    super(`Unable to perform '${action}' on a locked store from module '${moduleName}'`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\nexport class AccessedBeforeLock extends Error {\n  constructor(public moduleName: string) {\n    super(`A readonly store from '${moduleName}' is being accessed before it is locked. Please call the approprate function in '${moduleName}' to lock the store.`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import { Store } from './createStore';\nimport { AccessedBeforeLock, Prohibited } from './errors';\nimport { StoreInitializer, StoreValue } from './types';\nimport { getModuleStore, getStoreValue, initStoreValue, resetStoreValue } from './util';\nimport { Stores, StoreId } from './typesInternal';\n\nconst readonlyStores: Stores = {}\n\nexport type ReadonlyStore<T extends StoreValue> = Store<T> & {\n  /**\n   * Gets a writable value from the store.\n   * This can be used for configure the store value before it is locked.\n   * This is useful if your configuration is distributed in nature.\n   * When configuration is completed,\n   * you should `lock()` the store and use the `get()` method.\n   */\n  getWritable(): T\n  /**\n   * Disable the readonly feature of the store.\n   * Calling this function will make the store not readonly.\n   * It will behaves just like the normal `Store`.\n   * Obviously, you should only call this during testing.\n   */\n  disableProtection(): void,\n  /**\n   * Lock the store so that it cannot be modified.\n   * @param finalizer A finalizer object to do a final process of the value.\n   * You can use this to change the value, or freeze object.\n   * By default, the value itself will be frozen,\n   * If it contains array properties, those will also be frozen.\n   */\n  lock(finalizer?: Partial<{ [K in keyof T]: (value: T[K]) => T[K] }> & Record<keyof any, (value: any) => any>): ReadonlyStore<T>\n}\n\n/**\n * Creates a readonly store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param initializer Initializing function for the store.\n */\nexport function createReadonlyStore<\n  T extends StoreValue\n>(moduleName: string, key: string | symbol, initializer: StoreInitializer<T>): ReadonlyStore<T> {\n  initStoreValue(readonlyStores, { moduleName, key }, initializer)\n  let isLocked = false\n  let testing = false\n  return {\n    disableProtection() {\n      if (isLocked) throw new Prohibited(moduleName, 'enable testing')\n      testing = true\n    },\n    get() {\n      if (!testing && !isLocked) throw new AccessedBeforeLock(moduleName)\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    getWritable() {\n      if (!testing && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#getWritable')\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    lock(finalizer) {\n      if (!testing && !isLocked) {\n        if (finalizer) {\n          updateStoreValue(readonlyStores, { moduleName, key }, finalizer)\n        }\n        freezeStoreValue(readonlyStores, { moduleName, key })\n        isLocked = true\n        testing = false\n      }\n      return this\n    },\n    reset() {\n      if (!testing && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#reset')\n      resetStoreValue(readonlyStores, { moduleName, key })\n    }\n  }\n}\n\n\nfunction updateStoreValue(stores: Stores, id: StoreId, finalizer: any /* Record<any, (value: any) => any> */) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const current = moduleStore[id.key as any].value\n\n  Object.keys(finalizer).forEach(k => current[k] = finalizer[k](current[k]))\n}\n\nfunction freezeStoreValue(stores: Stores, id: StoreId) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const store = moduleStore[id.key as any]\n\n  moduleStore[id.key as any] = {\n    init: store.init,\n    value: freezeValue(store.value)\n  }\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  Object.keys(storeValue).forEach(k => freezeArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeArray(storeValue: StoreValue, k: any) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}