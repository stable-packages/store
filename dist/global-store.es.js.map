{"version":3,"file":"global-store.es.js","sources":["../src/compareVersion.ts","../src/errors.ts","../src/util.ts","../src/createReadonlyStore.ts","../src/createAsyncReadonlyStore.ts","../src/createStore.ts","../src/createAsyncStore.ts"],"sourcesContent":["import { StoreVersion } from './types';\n\n/**\n * Compare version.\n * Positive when processed > current\n * Negative when processed < current\n */\nexport function compareVersion(processed: StoreVersion, current: StoreVersion) {\n  const v1 = toVersionArray(processed)\n  const v2 = toVersionArray(current)\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] :\n      v1[2] - v2[2]\n}\n\nfunction toVersionArray(v: StoreVersion) {\n  return typeof v === 'number' ? [0, 0, v] :\n    v.split('.').map(v => Number.parseInt(v, 10))\n}\n","export class Prohibited extends Error {\n  constructor(public moduleName: string, public action: string) {\n    super(`Unable to perform '${action}' on a locked store from module '${moduleName}'`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\nexport class AccessedBeforeLock extends Error {\n  constructor(public moduleName: string) {\n    super(`A readonly store from '${moduleName}' is being accessed before it is locked. Please call the approprate function in '${moduleName}' to lock the store.`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import { compareVersion } from './compareVersion';\nimport { StoreInitializer, StoreValue, StoreVersion } from './types';\nimport { StoreCreator, StoreId, Stores } from './typesInternal';\n\nexport function getStoreValue(stores: Stores, id: StoreId): any {\n  return getStore(stores, id).value\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, version: StoreVersion, initializer: StoreInitializer<T>) {\n  const store = getStore(stores, id)\n  if (!~store.versions.indexOf(version)) {\n    store.initializers.push(initializer)\n    store.value = initializer(store.value as T, store.versions)\n    store.versions.push(version)\n  }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  const versions = store.versions\n  store.versions = []\n  store.value = store.initializers.reduce((value, initializer, i) => {\n    value = initializer(value, store.versions)\n    store.versions.push(versions[i])\n    return value\n  }, {})\n}\n\nexport function getStore(stores: Stores, id: StoreId) {\n  const moduleStore = stores[id.moduleName] = stores[id.moduleName] || {}\n  return moduleStore[id.key as any] = moduleStore[id.key as any] || { versions: [], value: {}, initializers: [] }\n}\n\nexport function resolveCreators<S>(moduleName: string, key: string, storeCreators: Array<StoreCreator<S>>, createStore: any) {\n  sortByVersion(storeCreators).forEach(({ version, resolve, initializer }) => resolve(createStore({ moduleName, key, version, initializer })))\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n  return storeCreators.sort((a, b) => compareVersion(a.version, b.version))\n}\n","import { Store } from './createStore';\nimport { AccessedBeforeLock, Prohibited } from './errors';\nimport { StoreOptions, StoreValue } from './types';\nimport { StoreId, Stores } from './typesInternal';\nimport { getStore, getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nconst readonlyStores: Stores = {}\n\nexport type ReadonlyStore<T extends StoreValue> = Store<T> & {\n  /**\n   * Gets a writable value from the store.\n   * This can be used to set the store value before it is locked.\n   * This is useful if your configuration is distributed in nature.\n   * When configuration is completed,\n   * you should `lock()` the store and access through `value`.\n   */\n  readonly writeable: T\n  /**\n   * Disable the readonly feature of the store.\n   * Calling this function will make the store not readonly.\n   * It will behaves just like the normal `Store`.\n   * Obviously, you should only call this during testing.\n   */\n  disableProtection(): void,\n  /**\n   * Lock the store so that it cannot be modified.\n   * @param finalizer A finalizer object to do a final process of the value.\n   * You can use this to change the value, or freeze object.\n   * By default, the value itself will be frozen,\n   * If it contains array properties, those will also be frozen.\n   */\n  lock(finalizer?: Partial<{ [K in keyof T]: (value: T[K]) => T[K] }> & Record<keyof any, (value: any) => any>): ReadonlyStore<T>\n}\n\n/**\n * Creates a readonly store of type T.\n * https://github.com/unional/global-store#createreadonlystore\n */\nexport function createReadonlyStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): ReadonlyStore<T> {\n  initStoreValue(readonlyStores, { moduleName, key }, version, initializer)\n  let isLocked = false\n  let disabled = false\n  return {\n    disableProtection() {\n      if (isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#disableProtection')\n      disabled = true\n    },\n    get value() {\n      if (!disabled && !isLocked) throw new AccessedBeforeLock(moduleName)\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    get writeable() {\n      if (!disabled && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#getWritable')\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    lock(finalizer) {\n      if (!disabled && !isLocked) {\n        if (finalizer) {\n          updateStoreValue(readonlyStores, { moduleName, key }, finalizer)\n        }\n        freezeStoreValue(readonlyStores, { moduleName, key })\n        isLocked = true\n        disabled = false\n      }\n      return this\n    },\n    reset() {\n      if (!disabled && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#reset')\n      resetStoreValue(readonlyStores, { moduleName, key })\n    }\n  }\n}\n\n\nfunction updateStoreValue(stores: Stores, id: StoreId, finalizer: Record<keyof any, (prev: any) => any>) {\n  const current = getStoreValue(stores, id)\n  Object.keys(finalizer).forEach(k => current[k] = finalizer[k](current[k]))\n}\n\nfunction freezeStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  store.value = freezeValue(store.value)\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  Object.keys(storeValue).forEach(k => freezeArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeArray(storeValue: StoreValue, k: any) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n","import { createReadonlyStore, ReadonlyStore } from './createReadonlyStore';\nimport { StoreOptions, StoreValue } from './types';\nimport { StoreCreators } from './typesInternal';\nimport { resolveCreators } from './util';\n\nconst asyncReadonlyStoreCreators: StoreCreators<ReadonlyStore<any>> = {}\n\n/**\n * Creates a readonly store of type T.\n * https://github.com/unional/global-store#createAsyncReadonlyStore\n */\nexport function createAsyncReadonlyStore<T extends StoreValue>(\n  { moduleName, key, version, initializer }: StoreOptions<T>): Promise<ReadonlyStore<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncReadonlyStoreCreators[moduleName] = asyncReadonlyStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncReadonlyStore()`.\n * https://github.com/unional/global-store#initializeAsyncReadonlyStore\n */\nexport function initializeAsyncReadonlyStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncReadonlyStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createReadonlyStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createReadonlyStore)\n    })\n  }\n}\n","import { StoreOptions, StoreValue } from './types';\nimport { Stores } from './typesInternal';\nimport { getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * Value from the store.\n   */\n  readonly value: T\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * https://github.com/unional/global-store#createstore\n */\nexport function createStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): Store<T> {\n  initStoreValue(stores, { moduleName, key }, version, initializer)\n\n  return {\n    get value() { return getStoreValue(stores, { moduleName, key }) },\n    reset: () => resetStoreValue(stores, { moduleName, key })\n  }\n}\n","import { createStore, Store } from './createStore';\nimport { StoreOptions, StoreValue } from './types';\nimport { resolveCreators } from './util';\nimport { StoreCreators } from './typesInternal';\n\nconst asyncStoreCreators: StoreCreators<Store<any>> = {}\n\n/**\n * Creates a store of type T asychronously.\n * https://github.com/unional/global-store#createAsyncStore\n */\nexport async function createAsyncStore<T extends StoreValue>({ moduleName, key, version, initializer }: StoreOptions<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n * https://github.com/unional/global-store#initializeAsyncStore\n */\nexport function initializeAsyncStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createStore)\n    })\n  }\n}\n"],"names":[],"mappings":"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"}