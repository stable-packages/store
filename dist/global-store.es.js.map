{"version":3,"file":"global-store.es.js","sources":["../src/toVersionArray.ts","../src/compareVersion.ts","../src/shouldInvokeInitializer.ts","../src/util.ts","../src/createStore.ts","../src/createAsyncStore.ts"],"sourcesContent":["import { StoreVersion } from './types';\n\nexport type ParsedVersion = [number, number, number]\n\nexport function toVersionArray(v: StoreVersion): ParsedVersion {\n  return typeof v === 'number' ? [0, 0, v] :\n    v.split('.').map(v => Number.parseInt(v, 10)) as any\n}\n","import { toVersionArray } from './toVersionArray';\nimport { StoreVersion } from './types';\n\n/**\n * Compare version.\n * Positive when processed > current\n * Negative when processed < current\n */\nexport function compareVersion(processed: StoreVersion, current: StoreVersion) {\n  const v1 = toVersionArray(processed)\n  const v2 = toVersionArray(current)\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] :\n      v1[2] - v2[2]\n}\n","import { StoreVersion } from './types'\nimport { toVersionArray, ParsedVersion } from './toVersionArray';\n\nexport function shouldInvokeInitializer(versions: StoreVersion[], version: StoreVersion) {\n  const vs = versions.map(toVersionArray)\n  const v = toVersionArray(version)\n  return noMatchMajor(vs, v) || hasNewVersion(vs, v)\n}\n\nfunction noMatchMajor(versions: ParsedVersion[], version: ParsedVersion) {\n  return !versions.some(v => v[0] === version[0])\n}\n\nfunction hasNewVersion(versions: ParsedVersion[], version: ParsedVersion) {\n  return versions.filter(v => v[0] === version[0]).some(\n    v => version[1] > v[1] || (version[1] === v[1] && version[2] > v[2]))\n}\n","import { compareVersion } from './compareVersion';\nimport { StoreInitializer, StoreValue, StoreVersion } from './types';\nimport { StoreCreator, StoreId, Stores } from './typesInternal';\nimport { shouldInvokeInitializer } from './shouldInvokeInitializer';\n\nexport function getStoreValue(stores: Stores, id: StoreId): any {\n  return getStore(stores, id).value\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, version: StoreVersion, initializer: StoreInitializer<T>) {\n  const store = getStore(stores, id)\n  if (shouldInvokeInitializer(store.versions, version)) {\n    store.initializers.push(initializer)\n    store.value = initializer(store.value as T, store.versions)\n    store.versions.push(version)\n  }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  const versions = store.versions\n  store.versions = []\n  store.value = store.initializers.reduce((value, initializer, i) => {\n    value = initializer(value, store.versions)\n    store.versions.push(versions[i])\n    return value\n  }, {})\n}\n\nexport function getStore(stores: Stores, id: StoreId) {\n  const moduleStore = stores[id.moduleName] = stores[id.moduleName] || {}\n  return moduleStore[id.key as any] = moduleStore[id.key as any] || { versions: [], value: {}, initializers: [] }\n}\n\nexport function resolveCreators<S>(moduleName: string, key: string, storeCreators: Array<StoreCreator<S>>, createStore: any) {\n  sortByVersion(storeCreators).forEach(({ version, resolve, initializer }) => resolve(createStore({ moduleName, key, version, initializer })))\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n  return storeCreators.sort((a, b) => compareVersion(a.version, b.version))\n}\n\nexport function freezeStoreValue(stores: Stores, id: StoreId, value?: any) {\n  const store = getStore(stores, id)\n  store.value = freezeValue(value || store.value)\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  if (Object.isFrozen(storeValue)) throw TypeError('Frozen value cannot be freezed again')\n\n  Object.keys(storeValue).forEach(k => freezeIfIsArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeIfIsArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeIfIsArray(storeValue: StoreValue, k: any) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n","import { StoreOptions, StoreValue } from './types';\nimport { Stores } from './typesInternal';\nimport { getStoreValue, initStoreValue, resetStoreValue, freezeStoreValue } from './util';\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * The store value.\n   */\n  readonly value: T\n  /**\n   * Freezes the store value.\n   * @param value Optional new store value.\n   * You can use this update the store value and freeze part of it.\n   */\n  freeze(value?: T): void\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * https://www.npmjs.com/package/global-store\n */\nexport function createStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): Store<T> {\n  const id = { moduleName, key }\n  initStoreValue(stores, id, version, initializer)\n\n  return {\n    get value() { return getStoreValue(stores, id) },\n    freeze: (value) => freezeStoreValue(stores, id, value),\n    reset: () => resetStoreValue(stores, id)\n  }\n}\n","import { createStore, Store } from './createStore';\nimport { StoreOptions, StoreValue } from './types';\nimport { resolveCreators } from './util';\nimport { StoreCreators } from './typesInternal';\n\nconst asyncStoreCreators: StoreCreators<Store<any>> = {}\n\n/**\n * Creates a store of type T asychronously.\n * https://github.com/unional/global-store#createAsyncStore\n */\nexport async function createAsyncStore<T extends StoreValue>({ moduleName, key, version, initializer }: StoreOptions<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n * https://github.com/unional/global-store#initializeAsyncStore\n */\nexport function initializeAsyncStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createStore)\n    })\n  }\n}\n"],"names":[],"mappings":"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"}