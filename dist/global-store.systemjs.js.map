{"version":3,"file":"global-store.systemjs.js","sources":["../src/compareVersion.ts","../src/errors.ts","../src/util.ts","../src/createReadonlyStore.ts","../src/createAsyncReadonlyStore.ts","../src/createStore.ts","../src/createAsyncStore.ts"],"sourcesContent":["import { StoreVersion } from './types';\n\nexport function compareVersion(a: StoreVersion, b: StoreVersion) {\n  const v1 = toVersionArray(a)\n  const v2 = toVersionArray(b)\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] :\n      v1[2] - v2[2]\n}\n\nfunction toVersionArray(v: StoreVersion) {\n  return typeof v === 'number' ? [0, 0, v] :\n    v.split('.').map(v => Number.parseInt(v, 10))\n}\n","export class Prohibited extends Error {\n  constructor(public moduleName: string, public action: string) {\n    super(`Unable to perform '${action}' on a locked store from module '${moduleName}'`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\nexport class AccessedBeforeLock extends Error {\n  constructor(public moduleName: string) {\n    super(`A readonly store from '${moduleName}' is being accessed before it is locked. Please call the approprate function in '${moduleName}' to lock the store.`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import { compareVersion } from './compareVersion';\nimport { StoreInitializer, StoreValue, StoreVersion } from './types';\nimport { StoreCreator, StoreId, Stores } from './typesInternal';\n\nexport function getStoreValue(stores: Stores, id: StoreId): any {\n  return getStore(stores, id).value\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, version: StoreVersion, initializer: StoreInitializer<T>) {\n  const store = getStore(stores, id)\n  if (!~store.versions.indexOf(version)) {\n    store.initializers.push(initializer)\n    store.value = initializer(store.value, store.versions)\n    store.versions.push(version)\n  }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  const versions = store.versions\n  store.versions = []\n  store.value = store.initializers.reduce((value, initializer, i) => {\n    value = initializer(value, store.versions)\n    store.versions.push(versions[i])\n    return value\n  }, {})\n}\n\nexport function getStore(stores: Stores, id: StoreId) {\n  const moduleStore = stores[id.moduleName] = stores[id.moduleName] || {}\n  return moduleStore[id.key as any] = moduleStore[id.key as any] || { versions: [], value: {}, initializers: [] }\n}\n\nexport function resolveCreators<S>(moduleName: string, key: string, storeCreators: Array<StoreCreator<S>>, createStore: any) {\n  sortByVersion(storeCreators).forEach(({ version, resolve, initializer }) => resolve(createStore({ moduleName, key, version, initializer })))\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n  return storeCreators.sort((a, b) => compareVersion(a.version, b.version))\n}\n","import { Store } from './createStore';\nimport { AccessedBeforeLock, Prohibited } from './errors';\nimport { StoreOptions, StoreValue } from './types';\nimport { StoreId, Stores } from './typesInternal';\nimport { getStore, getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nconst readonlyStores: Stores = {}\n\nexport type ReadonlyStore<T extends StoreValue> = Store<T> & {\n  /**\n   * Gets a writable value from the store.\n   * This can be used for configure the store value before it is locked.\n   * This is useful if your configuration is distributed in nature.\n   * When configuration is completed,\n   * you should `lock()` the store and use the `get()` method.\n   */\n  readonly writeable: T\n  /**\n   * Disable the readonly feature of the store.\n   * Calling this function will make the store not readonly.\n   * It will behaves just like the normal `Store`.\n   * Obviously, you should only call this during testing.\n   */\n  disableProtection(): void,\n  /**\n   * Lock the store so that it cannot be modified.\n   * @param finalizer A finalizer object to do a final process of the value.\n   * You can use this to change the value, or freeze object.\n   * By default, the value itself will be frozen,\n   * If it contains array properties, those will also be frozen.\n   */\n  lock(finalizer?: Partial<{ [K in keyof T]: (value: T[K]) => T[K] }> & Record<keyof any, (value: any) => any>): ReadonlyStore<T>\n}\n\n/**\n * Creates a readonly store of type T.\n * https://github.com/unional/global-store#createreadonlystore\n */\nexport function createReadonlyStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): ReadonlyStore<T> {\n  initStoreValue(readonlyStores, { moduleName, key }, version, initializer)\n  let isLocked = false\n  let disabled = false\n  return {\n    disableProtection() {\n      if (isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#disableProtection')\n      disabled = true\n    },\n    get value() {\n      if (!disabled && !isLocked) throw new AccessedBeforeLock(moduleName)\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    get writeable() {\n      if (!disabled && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#getWritable')\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    lock(finalizer) {\n      if (!disabled && !isLocked) {\n        if (finalizer) {\n          updateStoreValue(readonlyStores, { moduleName, key }, finalizer)\n        }\n        freezeStoreValue(readonlyStores, { moduleName, key })\n        isLocked = true\n        disabled = false\n      }\n      return this\n    },\n    reset() {\n      if (!disabled && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#reset')\n      resetStoreValue(readonlyStores, { moduleName, key })\n    }\n  }\n}\n\n\nfunction updateStoreValue(stores: Stores, id: StoreId, finalizer: Record<keyof any, (prev: any) => any>) {\n  const current = getStoreValue(stores, id)\n  Object.keys(finalizer).forEach(k => current[k] = finalizer[k](current[k]))\n}\n\nfunction freezeStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  store.value = freezeValue(store.value)\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  Object.keys(storeValue).forEach(k => freezeArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeArray(storeValue: StoreValue, k: any) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n","import { createReadonlyStore, ReadonlyStore } from './createReadonlyStore';\nimport { StoreOptions, StoreValue } from './types';\nimport { StoreCreators } from './typesInternal';\nimport { resolveCreators } from './util';\n\nconst asyncReadonlyStoreCreators: StoreCreators<ReadonlyStore<any>> = {}\n\n/**\n * Creates a readonly store of type T.\n * https://github.com/unional/global-store#createAsyncReadonlyStore\n */\nexport function createAsyncReadonlyStore<T extends StoreValue>(\n  { moduleName, key, version, initializer }: StoreOptions<T>): Promise<ReadonlyStore<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncReadonlyStoreCreators[moduleName] = asyncReadonlyStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncReadonlyStore()`.\n * https://github.com/unional/global-store#initializeAsyncReadonlyStore\n */\nexport function initializeAsyncReadonlyStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncReadonlyStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createReadonlyStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createReadonlyStore)\n    })\n  }\n}\n","import { StoreOptions, StoreValue } from './types';\nimport { Stores } from './typesInternal';\nimport { getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * Value from the store.\n   */\n  readonly value: T\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * https://github.com/unional/global-store#createstore\n */\nexport function createStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): Store<T> {\n  initStoreValue(stores, { moduleName, key }, version, initializer)\n\n  return {\n    get value() { return getStoreValue(stores, { moduleName, key }) },\n    reset: () => resetStoreValue(stores, { moduleName, key })\n  }\n}\n\n","import { createStore, Store } from './createStore';\nimport { StoreOptions, StoreValue } from './types';\nimport { resolveCreators } from './util';\nimport { StoreCreators } from './typesInternal';\n\nconst asyncStoreCreators: StoreCreators<Store<any>> = {}\n\n/**\n * Creates a store of type T asychronously.\n * https://github.com/unional/global-store#createAsyncStore\n */\nexport async function createAsyncStore<T extends StoreValue>({ moduleName, key, version, initializer }: StoreOptions<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n * https://github.com/unional/global-store#initializeAsyncStore\n */\nexport function initializeAsyncStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createStore)\n    })\n  }\n}\n"],"names":[],"mappings":"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"}