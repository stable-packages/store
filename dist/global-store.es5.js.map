{"version":3,"sources":["webpack://GlobalStore/webpack/bootstrap","webpack://GlobalStore/./src/createStore.ts","webpack://GlobalStore/./src/util.ts","webpack://GlobalStore/./src/errors.ts","webpack://GlobalStore/./src/index.ts","webpack://GlobalStore/./src/createAsyncStore.ts","webpack://GlobalStore/./src/createReadonlyStore.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util_1","stores","createStore","moduleName","initializer","initStoreValue","getStoreValue","reset","resetStoreValue","getModuleStore","createStoreValue","initialValue","__assign","id","moduleStore","store","init","Prohibited","_super","action","_this","this","setPrototypeOf","_newTarget","__extends","Error","AccessedBeforeLock","__export","createStore_1","default","asyncStoreCreators","resolveCreators","storeCreators","sort","a","b","v1","split","map","v","Number","v2","compareVersion","version","sortByVersion","forEach","_a","resolve","createAsyncStore","Promise","creatorsOfModules","push","initializeAsyncStore","keys","k","errors_1","readonlyStores","freezeValue","storeValue","freezeArray","getOwnPropertySymbols","freeze","Array","isArray","createReadonlyStore","isLocked","testing","disableProtection","getWritable","lock","finalizer","current","updateStoreValue"],"mappings":"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","file":"global-store.es5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { StoreInitializer, StoreValue } from './types';\nimport { Stores } from './typesInternal';\nimport { getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * Gets value from the store.\n   */\n  get(): T\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param initializer Initializing function for the store\n */\nexport function createStore<\n  T extends StoreValue\n>(moduleName: string, key: string | symbol, initializer: StoreInitializer<T>): Store<T> {\n  initStoreValue(stores, { moduleName, key }, initializer)\n\n  return {\n    get: () => getStoreValue(stores, { moduleName, key }),\n    reset: () => resetStoreValue(stores, { moduleName, key })\n  }\n}\n","import { StoreInitializer, StoreValue } from './types';\nimport { StoreId, Stores } from './typesInternal';\n\nexport function getStoreValue(stores: Stores, id: StoreId): any {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  return moduleStore[id.key as any].value\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, initializer: StoreInitializer<T>) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const store = moduleStore[id.key as any]\n  const init = initializer(store && store.init || {})\n  moduleStore[id.key as any] = { init, value: createStoreValue(init) }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  moduleStore[id.key as any].value = createStoreValue(moduleStore[id.key as any].init)\n}\n\nexport function getModuleStore(stores: Stores, moduleName: string) {\n  return stores[moduleName] = stores[moduleName] || {}\n}\n\nexport function createStoreValue(initialValue: any) {\n  return { ...initialValue }\n}\n","export class Prohibited extends Error {\n  constructor(public moduleName: string, public action: string) {\n    super(`Unable to perform '${action}' on a locked store from module '${moduleName}'`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\nexport class AccessedBeforeLock extends Error {\n  constructor(public moduleName: string) {\n    super(`A readonly store from '${moduleName}' is being accessed before it is locked. Please call the approprate function in '${moduleName}' to lock the store.`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","export * from './createAsyncStore';\nexport * from './createReadonlyStore';\nexport * from './createStore';\nexport { createStore as default } from './createStore';\nexport * from './errors';\nexport * from './types';\n","import { createStore, Store } from './createStore';\nimport { StoreInitializer, StoreValue } from './types';\n\nconst asyncStoreCreators: Record<string, Record<string | symbol, Array<StoreCreator>>> = {}\n\ntype StoreCreator = {\n  version: string | number,\n  resolve: (store: Store<any>) => void,\n  initializer: StoreInitializer<any>\n}\n\n/**\n * Creates a store of type T asychronously.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param version Version of the store. It can be numeric or string in the format of \"major.minor.patch\".\n * No other string format is accepted.\n * When it is numeric, it is compare to the patch number of the string version,\n * if there is a mix of number and string versions.\n * @param initializer Initializing function for the store\n */\nexport async function createAsyncStore<\n  T extends StoreValue,\n  V extends string | number\n>(moduleName: string, key: string | symbol, version: V, initializer: StoreInitializer<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n */\nexport function initializeAsyncStore(moduleName: string, key?: string | symbol) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (!key) {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators)\n    })\n  }\n  else {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators)\n  }\n}\n\nfunction resolveCreators(moduleName: string, key: string | symbol, storeCreators: Array<StoreCreator>) {\n  sortByVersion(storeCreators).forEach(({ resolve, initializer }) => resolve(createStore(moduleName, key, initializer)))\n}\n\nfunction sortByVersion(storeCreators: Array<StoreCreator>) {\n  return storeCreators.sort((a, b) => compareVersion(\n    typeof a.version === 'number' ? `0.0.${a.version}` : a.version,\n    typeof b.version === 'number' ? `0.0.${b.version}` : b.version)\n  )\n}\n\nfunction compareVersion(a: string, b: string) {\n  const v1 = a.split('.').map(v => Number(v))\n  const v2 = b.split('.').map(v => Number(v))\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] :\n      v1[2] - v2[2]\n}\n","import { Store } from './createStore';\nimport { AccessedBeforeLock, Prohibited } from './errors';\nimport { StoreInitializer, StoreValue } from './types';\nimport { getModuleStore, getStoreValue, initStoreValue, resetStoreValue } from './util';\nimport { Stores, StoreId } from './typesInternal';\n\nconst readonlyStores: Stores = {}\n\nexport type ReadonlyStore<T extends StoreValue> = Store<T> & {\n  /**\n   * Gets a writable value from the store.\n   * This can be used for configure the store value before it is locked.\n   * This is useful if your configuration is distributed in nature.\n   * When configuration is completed,\n   * you should `lock()` the store and use the `get()` method.\n   */\n  getWritable(): T\n  /**\n   * Disable the readonly feature of the store.\n   * Calling this function will make the store not readonly.\n   * It will behaves just like the normal `Store`.\n   * Obviously, you should only call this during testing.\n   */\n  disableProtection(): void,\n  /**\n   * Lock the store so that it cannot be modified.\n   * @param finalizer A finalizer object to do a final process of the value.\n   * You can use this to change the value, or freeze object.\n   * By default, the value itself will be frozen,\n   * If it contains array properties, those will also be frozen.\n   */\n  lock(finalizer?: Partial<{ [K in keyof T]: (value: T[K]) => T[K] }> & Record<keyof any, (value: any) => any>): ReadonlyStore<T>\n}\n\n/**\n * Creates a readonly store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param initializer Initializing function for the store.\n */\nexport function createReadonlyStore<\n  T extends StoreValue\n>(moduleName: string, key: string | symbol, initializer: StoreInitializer<T>): ReadonlyStore<T> {\n  initStoreValue(readonlyStores, { moduleName, key }, initializer)\n  let isLocked = false\n  let testing = false\n  return {\n    disableProtection() {\n      if (isLocked) throw new Prohibited(moduleName, 'enable testing')\n      testing = true\n    },\n    get() {\n      if (!testing && !isLocked) throw new AccessedBeforeLock(moduleName)\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    getWritable() {\n      if (!testing && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#getWritable')\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    lock(finalizer) {\n      if (!testing && !isLocked) {\n        if (finalizer) {\n          updateStoreValue(readonlyStores, { moduleName, key }, finalizer)\n        }\n        freezeStoreValue(readonlyStores, { moduleName, key })\n        isLocked = true\n        testing = false\n      }\n      return this\n    },\n    reset() {\n      if (!testing && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#reset')\n      resetStoreValue(readonlyStores, { moduleName, key })\n    }\n  }\n}\n\n\nfunction updateStoreValue(stores: Stores, id: StoreId, finalizer: any /* Record<any, (value: any) => any> */) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const current = moduleStore[id.key as any].value\n\n  Object.keys(finalizer).forEach(k => current[k] = finalizer[k](current[k]))\n}\n\nfunction freezeStoreValue(stores: Stores, id: StoreId) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const store = moduleStore[id.key as any]\n\n  moduleStore[id.key as any] = {\n    init: store.init,\n    value: freezeValue(store.value)\n  }\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  Object.keys(storeValue).forEach(k => freezeArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeArray(storeValue: StoreValue, k: any) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n"],"sourceRoot":""}