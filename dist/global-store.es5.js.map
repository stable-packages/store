{"version":3,"sources":[null,"webpack:///global-store/index.ts"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","id","defaultValue","globalState","set","value","create","default"],"mappings":"4BAIA,SAAAA,EAAAC,GAGA,GAAAC,EAAAD,GACA,OAAAC,EAAAD,GAAAE,QAGA,IAAAC,EAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,YAUA,OANAI,EAAAN,GAAAO,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,IAAAD,KA4DA,OAhCAF,EAAAS,EAAAF,EAGAP,EAAAU,EAAAR,EAGAF,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAJ,EAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,kCChDA,SAAAR,EAA6BS,EAAqBC,GAChD,OAAOC,EAAYF,GAAME,EAAYF,IAAOC,EAQ9C,SAAAE,EAAoBH,EAAqBI,GACvCF,EAAYF,GAAMI,EAmBpB,SAAAC,EAAgCL,EAAqBC,GACnD,OACEV,IAAG,WACD,OAAOA,EAAOS,EAAIC,IAEpBE,IAAG,SAACC,GACFD,EAAIH,EAAII,sDAhDd,IAAMF,KAaN3B,EAAAgB,MASAhB,EAAA4B,MAoBA5B,EAAA8B,SAWA9B,EAAA+B,QAAeD","file":"global-store.es5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fa00ebcbc8aaad64c02b","const globalState: any = {}\n\n/**\n * Gets a value.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * e.g. `my-module:some-purpose:some-random-string`\n * @param defaultValue Optional default value.\n */\nexport function get<T = any>(id: string | symbol, defaultValue?: T): T {\n  return globalState[id] = globalState[id] || defaultValue\n}\n\n/**\n * Sets a value.\n * @param id The unique identifier of the store.\n * @param value Any value you want to save.\n */\nexport function set(id: string | symbol, value: any) {\n  globalState[id] = value\n}\n\nexport interface Store<T> {\n  get(): T\n  set(value: T): void\n}\n\n/**\n * Creates a store of type T.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * e.g. `my-module:some-purpose:some-random-string`\n * @param defaultValue Optional default value.\n */\nexport function create<T = any>(id: string | symbol, defaultValue?: T): Store<T> {\n  return {\n    get() {\n      return get<T>(id, defaultValue)\n    },\n    set(value: T) {\n      set(id, value)\n    }\n  }\n}\n\nexport default create\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}