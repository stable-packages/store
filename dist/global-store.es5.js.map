{"version":3,"file":"global-store.es5.js","mappings":"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","sources":["webpack://GlobalStore/./src/compareVersion.ts","webpack://GlobalStore/./src/createAsyncStore.ts","webpack://GlobalStore/./src/createStore.ts","webpack://GlobalStore/./src/index.ts","webpack://GlobalStore/./src/shouldInvokeInitializer.ts","webpack://GlobalStore/./src/toVersionArray.ts","webpack://GlobalStore/./src/util.ts","webpack://GlobalStore/webpack/bootstrap","webpack://GlobalStore/webpack/startup"],"sourcesContent":["import { toVersionArray } from './toVersionArray'\nimport { StoreVersion } from './types'\n\n/**\n * Compare version.\n * Positive when processed > current\n * Negative when processed < current\n */\nexport function compareVersion(processed: StoreVersion, current: StoreVersion) {\n  const v1 = toVersionArray(processed)\n  const v2 = toVersionArray(current)\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] : v1[2] - v2[2]\n}\n","import { createStore, Store } from './createStore'\nimport { StoreOptions, StoreValue } from './types'\nimport { StoreCreators } from './typesInternal'\nimport { resolveCreators } from './util'\n\nconst asyncStoreCreators: StoreCreators<Store<any>> = {}\n\n/**\n * Creates a store of type T asynchronously.\n * @see https://github.com/unional/global-store#createAsyncStore\n */\nexport async function createAsyncStore<T extends StoreValue>({ moduleName, key, version, initializer }: StoreOptions<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const k = key ?? 'default'\n    const storeCreators = creatorsOfModules[k] = creatorsOfModules[k] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n * @see https://github.com/unional/global-store#initializeAsyncStore\n */\nexport function initializeAsyncStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  const keys = key ? [key] : Object.keys(creatorsOfModules)\n  keys.forEach(key => resolveCreators(moduleName, key, creatorsOfModules[key], createStore))\n}\n","import { StoreOptions, StoreValue } from './types'\nimport { Stores } from './typesInternal'\nimport { freezeStoreValue, getStoreValue, initStoreValue, resetStoreValue } from './util'\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * The store value.\n   */\n  readonly value: T,\n  /**\n   * Freezes the store value.\n   * @param value Optional new store value.\n   * If supplied, this value will be freezed and used as the store value.\n   * You can use this update the store value and freeze part of it.\n   * If not supplied,\n   * the original value will be freezed and its array property will also be freezed.\n   */\n  freeze(value?: { [k in keyof T]: Readonly<T[k]> }): void,\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void,\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * @see https://www.npmjs.com/package/global-store\n */\nexport function createStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): Store<T> {\n  const id = { moduleName, key }\n  initStoreValue(stores, id, version, initializer)\n\n  return {\n    get value() { return getStoreValue<T>(stores, id) },\n    freeze(value) { return freezeStoreValue(stores, id, value) },\n    reset() { return resetStoreValue(stores, id) }\n  }\n}\n","export * from './createAsyncStore'\nexport * from './createStore'\nexport { createStore as default } from './createStore'\nexport * from './types'\n\n","import { ParsedVersion, toVersionArray } from './toVersionArray'\nimport { StoreVersion } from './types'\n\nexport function shouldInvokeInitializer(versions: StoreVersion[], version: StoreVersion) {\n  const vs = versions.map(toVersionArray)\n  const v = toVersionArray(version)\n  return noMatchMajor(vs, v) || hasNewVersion(vs, v)\n}\n\nfunction noMatchMajor(versions: ParsedVersion[], version: ParsedVersion) {\n  return !versions.some(v => v[0] === version[0])\n}\n\nfunction hasNewVersion(versions: ParsedVersion[], version: ParsedVersion) {\n  return versions.filter(v => v[0] === version[0])\n    .some(v => version[1] > v[1] || (version[1] === v[1] && version[2] > v[2]))\n}\n","import { StoreVersion } from './types'\n\nexport type ParsedVersion = [number, number, number]\n\nexport function toVersionArray(v: StoreVersion): ParsedVersion {\n  return typeof v === 'number' ? [0, 0, v] :\n    v.split('.').map(v => parseInt(v, 10)) as ParsedVersion\n}\n","import createStore from '.'\nimport { compareVersion } from './compareVersion'\nimport { shouldInvokeInitializer } from './shouldInvokeInitializer'\nimport { StoreInitializer, StoreValue, StoreVersion } from './types'\nimport { StoreCreator, StoreId, Stores } from './typesInternal'\n\nexport function getStoreValue<T extends StoreValue>(stores: Stores, id: StoreId): T {\n  return getStore(stores, id).value as T\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, version: StoreVersion, initializer: StoreInitializer<T>) {\n  const store = getStore(stores, id)\n  if (shouldInvokeInitializer(store.versions, version)) {\n    store.initializers.push(initializer as StoreInitializer<StoreValue>)\n    store.value = initializer(store.value as T, store.versions)\n    store.versions.push(version)\n  }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  const versions = store.versions\n  store.versions = []\n  store.value = store.initializers.reduce<StoreValue>((value, initializer, i) => {\n    value = initializer(value, store.versions)\n    store.versions.push(versions[i])\n    return value\n  }, {})\n}\n\nexport function getStore(stores: Stores, id: StoreId) {\n  const moduleStore = stores[id.moduleName] = stores[id.moduleName] || {}\n  const key = id.key ?? 'default'\n  return moduleStore[key] = moduleStore[key] || { versions: [], value: {}, initializers: [] }\n}\n\nexport function resolveCreators(moduleName: string, key: string, storeCreators: Array<StoreCreator<any>>, cs: typeof createStore) {\n  sortByVersion(storeCreators).forEach(({ version, resolve, initializer }) => resolve(cs({ moduleName, key, version, initializer })))\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n  return storeCreators.sort((a, b) => compareVersion(a.version, b.version))\n}\n\nexport function freezeStoreValue(stores: Stores, id: StoreId, value?: StoreValue) {\n  const store = getStore(stores, id)\n  store.value = value ?\n    Object.isFrozen(value) ? value : Object.freeze(value) :\n    freezeValue(store.value)\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  if (Object.isFrozen(storeValue)) throw TypeError('Frozen value cannot be freezed again')\n\n  Object.keys(storeValue).forEach(k => freezeIfIsArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeIfIsArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeIfIsArray(storeValue: StoreValue, k: string | number | symbol) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"names":["processed","current","v1","toVersionArray","v2","asyncStoreCreators","moduleName","key","version","initializer","Promise","resolve","creatorsOfModules","k","push","Object","keys","forEach","resolveCreators","createStore","stores","id","initStoreValue","value","getStoreValue","freeze","freezeStoreValue","reset","resetStoreValue","versions","vs","map","v","some","noMatchMajor","filter","hasNewVersion","split","parseInt","getStore","moduleStore","initializers","sortByVersion","storeCreators","sort","a","b","compareVersion","freezeIfIsArray","storeValue","Array","isArray","store","shouldInvokeInitializer","reduce","i","cs","isFrozen","TypeError","getOwnPropertySymbols","freezeValue","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}