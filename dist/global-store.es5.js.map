{"version":3,"sources":["webpack:///webpack/bootstrap c5cd20268dbe7d0f1cd2","webpack:///global-store//index.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA,IAAM,WAAW,GAAQ,EAAE;AAE3B;;;;;;;;;;GAUG;AACH,aAA6B,EAAmB,EAAE,YAAgB;IAChE,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,IAAI,YAAY;AAC1D,CAAC;AAFD,kBAEC;AAED;;;;GAIG;AACH,aAAoB,EAAmB,EAAE,KAAU;IACjD,WAAW,CAAC,EAAE,CAAC,GAAG,KAAK;AACzB,CAAC;AAFD,kBAEC;AAOD;;;;;;;;;;GAUG;AACH,gBAAgC,EAAmB,EAAE,YAAgB;IACnE,MAAM,CAAC;QACL,GAAG;YACD,MAAM,CAAC,GAAG,CAAI,EAAE,EAAE,YAAY,CAAC;QACjC,CAAC;QACD,GAAG,YAAC,KAAQ;YACV,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC;QAChB,CAAC;KACF;AACH,CAAC;AATD,wBASC;AAED,kBAAe,MAAM","file":"global-store.es5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c5cd20268dbe7d0f1cd2","const globalState: any = {}\n\n/**\n * Gets a value.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * e.g. `my-module:some-purpose:some-random-string`\n * @param defaultValue Optional default value.\n */\nexport function get<T = any>(id: string | symbol, defaultValue?: T): T {\n  return globalState[id] = globalState[id] || defaultValue\n}\n\n/**\n * Sets a value.\n * @param id The unique identifier of the store.\n * @param value Any value you want to save.\n */\nexport function set(id: string | symbol, value: any) {\n  globalState[id] = value\n}\n\nexport interface Store<T> {\n  get(): T\n  set(value: T): void\n}\n\n/**\n * Creates a store of type T.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * e.g. `my-module:some-purpose:some-random-string`\n * @param defaultValue Optional default value.\n */\nexport function create<T = any>(id: string | symbol, defaultValue?: T): Store<T> {\n  return {\n    get() {\n      return get<T>(id, defaultValue)\n    },\n    set(value: T) {\n      set(id, value)\n    }\n  }\n}\n\nexport default create\n\n\n\n// WEBPACK FOOTER //\n// ../../src/index.ts"],"sourceRoot":""}