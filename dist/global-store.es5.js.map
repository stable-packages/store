{"version":3,"sources":["webpack://GlobalStore/webpack/bootstrap","webpack://GlobalStore/./src/util.ts","webpack://GlobalStore/./src/createStore.ts","webpack://GlobalStore/./src/createReadonlyStore.ts","webpack://GlobalStore/./src/errors.ts","webpack://GlobalStore/./src/index.ts","webpack://GlobalStore/./src/createAsyncReadonlyStore.ts","webpack://GlobalStore/./src/createAsyncStore.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getModuleStore","stores","moduleName","createStoreValue","initialValue","__assign","sortByVersion","storeCreators","sort","a","b","compareVersion","version","v1","split","map","v","Number","v2","getStoreValue","id","initStoreValue","initializer","moduleStore","store","versions","init","push","resetStoreValue","resolveCreators","createStore","forEach","_a","resolve","util_1","reset","errors_1","readonlyStores","freezeValue","storeValue","keys","k","freezeArray","getOwnPropertySymbols","freeze","Array","isArray","createReadonlyStore","isLocked","testing","disableProtection","Prohibited","AccessedBeforeLock","getWritable","lock","finalizer","current","updateStoreValue","this","_super","action","_this","setPrototypeOf","_newTarget","__extends","Error","__export","createStore_1","default","createReadonlyStore_1","asyncReadonlyStoreCreators","createAsyncReadonlyStore","Promise","creatorsOfModules","initializeAsyncReadonlyStore","asyncStoreCreators","createAsyncStore","initializeAsyncStore"],"mappings":"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","file":"global-store.es5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { StoreInitializer, StoreValue, StoreVersion, StoreKey } from './types';\nimport { StoreId, Stores } from './typesInternal';\n\nexport function getStoreValue(stores: Stores, id: StoreId): any {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  return moduleStore[id.key as any].value\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, version: StoreVersion, initializer: StoreInitializer<T>) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const store: StoreValue = moduleStore[id.key as any] || { versions: [], init: {} }\n  const versions = store.versions\n  const init = initializer(store.init, versions)\n  versions.push(version)\n  moduleStore[id.key as any] = { versions, init, value: createStoreValue(init) }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  moduleStore[id.key as any].value = createStoreValue(moduleStore[id.key as any].init)\n}\n\nexport function getModuleStore(stores: Stores, moduleName: string) {\n  return stores[moduleName] = stores[moduleName] || {}\n}\n\nexport function createStoreValue(initialValue: any) {\n  return { ...initialValue }\n}\n\n\nexport type StoreCreator<S> = {\n  version: StoreVersion,\n  resolve: (store: S) => void,\n  initializer: StoreInitializer<any>\n}\n\nexport function resolveCreators<S>(moduleName: string, key: StoreKey, storeCreators: Array<StoreCreator<S>>, createStore: any) {\n  sortByVersion(storeCreators).forEach(({ version, resolve, initializer }) => resolve(createStore(moduleName, key, version, initializer)))\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n  return storeCreators.sort((a, b) => compareVersion(\n    typeof a.version === 'number' ? `0.0.${a.version}` : a.version,\n    typeof b.version === 'number' ? `0.0.${b.version}` : b.version)\n  )\n}\n\nexport function compareVersion(a: string, b: string) {\n  const v1 = a.split('.').map(v => Number(v))\n  const v2 = b.split('.').map(v => Number(v))\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] :\n      v1[2] - v2[2]\n}\n","import { StoreInitializer, StoreValue, StoreVersion, StoreKey } from './types';\nimport { Stores } from './typesInternal';\nimport { getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * Gets value from the store.\n   */\n  get(): T\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void\n}\n\nconst stores: Stores = {}\n\n/**\n * Creates a store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param initializer Initializing function for the store\n */\nexport function createStore<\n  T extends StoreValue\n>(moduleName: string, key: StoreKey, version: StoreVersion, initializer: StoreInitializer<T>): Store<T> {\n  initStoreValue(stores, { moduleName, key }, version, initializer)\n\n  return {\n    get: () => getStoreValue(stores, { moduleName, key }),\n    reset: () => resetStoreValue(stores, { moduleName, key })\n  }\n}\n","import { Store } from './createStore';\nimport { AccessedBeforeLock, Prohibited } from './errors';\nimport { StoreInitializer, StoreValue, StoreVersion, StoreKey } from './types';\nimport { StoreId, Stores } from './typesInternal';\nimport { getModuleStore, getStoreValue, initStoreValue, resetStoreValue } from './util';\n\nconst readonlyStores: Stores = {}\n\nexport type ReadonlyStore<T extends StoreValue> = Store<T> & {\n  /**\n   * Gets a writable value from the store.\n   * This can be used for configure the store value before it is locked.\n   * This is useful if your configuration is distributed in nature.\n   * When configuration is completed,\n   * you should `lock()` the store and use the `get()` method.\n   */\n  getWritable(): T\n  /**\n   * Disable the readonly feature of the store.\n   * Calling this function will make the store not readonly.\n   * It will behaves just like the normal `Store`.\n   * Obviously, you should only call this during testing.\n   */\n  disableProtection(): void,\n  /**\n   * Lock the store so that it cannot be modified.\n   * @param finalizer A finalizer object to do a final process of the value.\n   * You can use this to change the value, or freeze object.\n   * By default, the value itself will be frozen,\n   * If it contains array properties, those will also be frozen.\n   */\n  lock(finalizer?: Partial<{ [K in keyof T]: (value: T[K]) => T[K] }> & Record<keyof any, (value: any) => any>): ReadonlyStore<T>\n}\n\n/**\n * Creates a readonly store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param initializer Initializing function for the store.\n */\nexport function createReadonlyStore<\n  T extends StoreValue\n>(moduleName: string, key: StoreKey, version: StoreVersion, initializer: StoreInitializer<T>): ReadonlyStore<T> {\n  initStoreValue(readonlyStores, { moduleName, key }, version, initializer)\n  let isLocked = false\n  let testing = false\n  return {\n    disableProtection() {\n      if (isLocked) throw new Prohibited(moduleName, 'enable testing')\n      testing = true\n    },\n    get() {\n      if (!testing && !isLocked) throw new AccessedBeforeLock(moduleName)\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    getWritable() {\n      if (!testing && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#getWritable')\n      return getStoreValue(readonlyStores, { moduleName, key })\n    },\n    lock(finalizer) {\n      if (!testing && !isLocked) {\n        if (finalizer) {\n          updateStoreValue(readonlyStores, { moduleName, key }, finalizer)\n        }\n        freezeStoreValue(readonlyStores, { moduleName, key })\n        isLocked = true\n        testing = false\n      }\n      return this\n    },\n    reset() {\n      if (!testing && isLocked) throw new Prohibited(moduleName, 'ReadonlyStore#reset')\n      resetStoreValue(readonlyStores, { moduleName, key })\n    }\n  }\n}\n\n\nfunction updateStoreValue(stores: Stores, id: StoreId, finalizer: any /* Record<any, (value: any) => any> */) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const current = moduleStore[id.key as any].value\n\n  Object.keys(finalizer).forEach(k => current[k] = finalizer[k](current[k]))\n}\n\nfunction freezeStoreValue(stores: Stores, id: StoreId) {\n  const moduleStore = getModuleStore(stores, id.moduleName)\n  const store = moduleStore[id.key as any]\n\n  moduleStore[id.key as any] = {\n    versions: store.versions,\n    init: store.init,\n    value: freezeValue(store.value)\n  }\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  Object.keys(storeValue).forEach(k => freezeArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeArray(storeValue: StoreValue, k: any) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n","export class Prohibited extends Error {\n  constructor(public moduleName: string, public action: string) {\n    super(`Unable to perform '${action}' on a locked store from module '${moduleName}'`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\nexport class AccessedBeforeLock extends Error {\n  constructor(public moduleName: string) {\n    super(`A readonly store from '${moduleName}' is being accessed before it is locked. Please call the approprate function in '${moduleName}' to lock the store.`)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","export * from './createAsyncReadonlyStore';\nexport * from './createAsyncStore';\nexport * from './createReadonlyStore';\nexport * from './createStore';\nexport { createStore as default } from './createStore';\nexport * from './errors';\nexport * from './types';\n\n","import { createReadonlyStore, ReadonlyStore } from './createReadonlyStore';\nimport { StoreInitializer, StoreKey, StoreValue, StoreVersion } from './types';\nimport { resolveCreators, StoreCreator } from './util';\n\nconst asyncReadonlyStoreCreators: Record<string, Record<StoreKey, Array<StoreCreator<ReadonlyStore<any>>>>> = {}\n\n/**\n * Creates a readonly store of type T.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param version Version of the store. It can be numeric or string in the format of \"major.minor.patch\".\n * No other string format is accepted.\n * When it is numeric, it is compare to the patch number of the string version,\n * if there is a mix of number and string versions.\n * @param initializer Initializing function for the store.\n */\nexport function createAsyncReadonlyStore<T extends StoreValue>(\n  moduleName: string,\n  key: StoreKey,\n  version: StoreVersion,\n  initializer: StoreInitializer<T>\n): Promise<ReadonlyStore<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncReadonlyStoreCreators[moduleName] = asyncReadonlyStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n */\nexport function initializeAsyncReadonlyStore(moduleName: string, key?: StoreKey) {\n  const creatorsOfModules = asyncReadonlyStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createReadonlyStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createReadonlyStore)\n    })\n  }\n}\n","import { createStore, Store } from './createStore';\nimport { StoreInitializer, StoreKey, StoreValue, StoreVersion } from './types';\nimport { resolveCreators, StoreCreator } from './util';\n\nconst asyncStoreCreators: Record<string, Record<StoreKey, Array<StoreCreator<Store<any>>>>> = {}\n\n/**\n * Creates a store of type T asychronously.\n * @param moduleName Name of your module. This will be used during reporting.\n * @param key Specific key of the store scoped to your module. This will not appear in reporting.\n * You can use `Symbol.for(<some key>)` to make the store accessible accross service workers and iframes.\n *\n * It is recommend that the key contains the purpose as well as a random value such as GUID.\n * e.g. `some-purpose:c0574313-5f6c-4c02-a875-ad793d47b695`\n * This key should not change across versions.\n * @param version Version of the store. It can be numeric or string in the format of \"major.minor.patch\".\n * No other string format is accepted.\n * When it is numeric, it is compare to the patch number of the string version,\n * if there is a mix of number and string versions.\n * @param initializer Initializing function for the store\n */\nexport async function createAsyncStore<\n  T extends StoreValue,\n  V extends StoreVersion\n>(moduleName: string, key: StoreKey, version: V, initializer: StoreInitializer<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || {}\n    const storeCreators = creatorsOfModules[key as any] = creatorsOfModules[key as any] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n */\nexport function initializeAsyncStore(moduleName: string, key?: StoreKey) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  if (key) {\n    const storeCreators = creatorsOfModules[key as any]\n    resolveCreators(moduleName, key, storeCreators, createStore)\n  }\n  else {\n    Object.keys(creatorsOfModules).forEach(k => {\n      const storeCreators = creatorsOfModules[k]\n      resolveCreators(moduleName, k, storeCreators, createStore)\n    })\n  }\n}\n"],"sourceRoot":""}