{"version":3,"file":"global-store.js","sources":["../ts/toVersionArray.ts","../ts/util.ts","../ts/shouldInvokeInitializer.ts","../ts/compareVersion.ts","../ts/createStore.ts","../ts/createAsyncStore.ts"],"sourcesContent":["import { StoreVersion } from './types.js'\n\nexport type ParsedVersion = [number, number, number]\n\nexport function toVersionArray(v: StoreVersion): ParsedVersion {\n  return typeof v === 'number' ? [0, 0, v] :\n    v.split('.').map(v => parseInt(v, 10)) as ParsedVersion\n}\n","import { compareVersion } from './compareVersion.js'\nimport { createStore } from './createStore.js'\nimport { shouldInvokeInitializer } from './shouldInvokeInitializer.js'\nimport { StoreInitializer, StoreValue, StoreVersion } from './types.js'\nimport { StoreCreator, StoreId, Stores } from './typesInternal.js'\n\nexport function getStoreValue<T extends StoreValue>(stores: Stores, id: StoreId): T {\n  return getStore(stores, id).value as T\n}\n\nexport function initStoreValue<T extends StoreValue>(stores: Stores, id: StoreId, version: StoreVersion, initializer: StoreInitializer<T>) {\n  const store = getStore(stores, id)\n  if (shouldInvokeInitializer(store.versions, version)) {\n    store.initializers.push(initializer as StoreInitializer<StoreValue>)\n    store.value = initializer(store.value as T, store.versions)\n    store.versions.push(version)\n  }\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n  const store = getStore(stores, id)\n  const versions = store.versions\n  store.versions = []\n  store.value = store.initializers.reduce<StoreValue>((value, initializer, i) => {\n    value = initializer(value, store.versions)\n    store.versions.push(versions[i])\n    return value\n  }, {})\n}\n\nexport function getStore(stores: Stores, id: StoreId) {\n  const moduleStore = stores[id.moduleName] = stores[id.moduleName] || Object.create(null)\n  const key = id.key ?? 'default'\n  return moduleStore[key] = moduleStore[key] || { versions: [], value: {}, initializers: [] }\n}\n\nexport function resolveCreators(moduleName: string, key: string, storeCreators: Array<StoreCreator<any>>, cs: typeof createStore) {\n  sortByVersion(storeCreators).forEach(({ version, resolve, initializer }) => resolve(cs({ moduleName, key, version, initializer })))\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n  return storeCreators.sort((a, b) => compareVersion(a.version, b.version))\n}\n\nexport function freezeStoreValue(stores: Stores, id: StoreId, value?: StoreValue) {\n  const store = getStore(stores, id)\n  store.value = value ?\n    Object.isFrozen(value) ? value : Object.freeze(value) :\n    freezeValue(store.value)\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n  if (Object.isFrozen(storeValue)) throw TypeError('Frozen value cannot be freezed again')\n\n  Object.keys(storeValue).forEach(k => freezeIfIsArray(storeValue, k))\n  // istanbul ignore next\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(storeValue).forEach(k => freezeIfIsArray(storeValue, k))\n  }\n\n  return Object.freeze(storeValue)\n}\n\nfunction freezeIfIsArray(storeValue: StoreValue, k: string | number | symbol) {\n  const value = storeValue[k]\n  if (Array.isArray(value)) {\n    storeValue[k] = Object.freeze(value)\n  }\n}\n","import { ParsedVersion, toVersionArray } from './toVersionArray.js'\nimport { StoreVersion } from './types.js'\n\nexport function shouldInvokeInitializer(versions: StoreVersion[], version: StoreVersion) {\n  const vs = versions.map(toVersionArray)\n  const v = toVersionArray(version)\n  return noMatchMajor(vs, v) || hasNewVersion(vs, v)\n}\n\nfunction noMatchMajor(versions: ParsedVersion[], version: ParsedVersion) {\n  return !versions.some(v => v[0] === version[0])\n}\n\nfunction hasNewVersion(versions: ParsedVersion[], version: ParsedVersion) {\n  return versions.filter(v => v[0] === version[0])\n    .some(v => version[1] > v[1] || (version[1] === v[1] && version[2] > v[2]))\n}\n","import { toVersionArray } from './toVersionArray.js'\nimport { StoreVersion } from './types.js'\n\n/**\n * Compare version.\n * Positive when processed > current\n * Negative when processed < current\n * @internal\n */\nexport function compareVersion(processed: StoreVersion, current: StoreVersion) {\n  const v1 = toVersionArray(processed)\n  const v2 = toVersionArray(current)\n  return v1[0] !== v2[0] ? v1[0] - v2[0] :\n    v1[1] !== v2[1] ? v1[1] - v2[1] : v1[2] - v2[2]\n}\n","import { StoreOptions, StoreValue } from './types.js'\nimport { Stores } from './typesInternal.js'\nimport { freezeStoreValue, getStoreValue, initStoreValue, resetStoreValue } from './util.js'\n\nexport type Store<T extends StoreValue> = {\n  /**\n   * The store value.\n   */\n  readonly value: T,\n  /**\n   * Freezes the store value.\n   * @param value Optional new store value.\n   * If supplied, this value will be freezed and used as the store value.\n   * You can use this update the store value and freeze part of it.\n   * If not supplied,\n   * the original value will be freezed and its array property will also be freezed.\n   */\n  freeze(value?: { [k in keyof T]: Readonly<T[k]> }): void,\n  /**\n   * Resets the store to its initial value.\n   * You should only use this during testing.\n   */\n  reset(): void,\n}\n\nconst stores = Object.create(null) as Stores\n\n/**\n * Creates a store of type T.\n * @see https://www.npmjs.com/package/global-store\n */\nexport function createStore<\n  T extends StoreValue\n>({ moduleName, key, version, initializer }: StoreOptions<T>): Store<T> {\n  const id = { moduleName, key }\n  initStoreValue(stores, id, version, initializer)\n\n  return {\n    get value() { return getStoreValue<T>(stores, id) },\n    freeze(value) { return freezeStoreValue(stores, id, value) },\n    reset() { return resetStoreValue(stores, id) }\n  }\n}\n","import { createStore, Store } from './createStore.js'\nimport { StoreOptions, StoreValue } from './types.js'\nimport { StoreCreators } from './typesInternal.js'\nimport { resolveCreators } from './util.js'\n\nconst asyncStoreCreators = Object.create(null) as StoreCreators<Store<any>>\n\n/**\n * Creates a store of type T asynchronously.\n * @see https://github.com/unional/global-store#createAsyncStore\n */\nexport async function createAsyncStore<T extends StoreValue>({ moduleName, key, version, initializer }: StoreOptions<T>): Promise<Store<T>> {\n  return new Promise(resolve => {\n    const creatorsOfModules = asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || Object.create(null)\n    const k = key ?? 'default'\n    const storeCreators = creatorsOfModules[k] = creatorsOfModules[k] || []\n    storeCreators.push({ version, resolve, initializer })\n  })\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n * @see https://github.com/unional/global-store#initializeAsyncStore\n */\nexport function initializeAsyncStore(moduleName: string, key?: string) {\n  const creatorsOfModules = asyncStoreCreators[moduleName]\n  if (!creatorsOfModules) return\n\n  const keys = key ? [key] : Object.keys(creatorsOfModules)\n  keys.forEach(key => resolveCreators(moduleName, key, creatorsOfModules[key], createStore))\n}\n"],"names":["toVersionArray","v","split","map","parseInt","initStoreValue","stores","id","version","initializer","store","getStore","versions","vs","some","noMatchMajor","filter","hasNewVersion","shouldInvokeInitializer","initializers","push","value","moduleStore","moduleName","Object","create","key","resolveCreators","storeCreators","cs","sort","a","b","processed","current","v1","v2","compareVersion","sortByVersion","forEach","resolve","freezeStoreValue","isFrozen","freeze","storeValue","TypeError","keys","k","freezeIfIsArray","getOwnPropertySymbols","freezeValue","Array","isArray","createStore","getStoreValue","reset","reduce","i","resetStoreValue","asyncStoreCreators","async","Promise","creatorsOfModules"],"mappings":"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"}