declare module 'global-store' {
  declare export type StoreValue = Record<string | Symbol, any>
  declare export type StoreVersion = string | Number
  declare export type StoreInitializer<T: StoreValue> = (current: T, processedVersions: StoreVersion[]) => T

  declare export type Store<T: StoreValue> = { get(): T, reset(): void }
  declare export type StoreOptions<T: StoreValue> = { moduleName: string, key: string, version: StoreVersion, initializer: StoreInitializer<T> }


  declare export function createAsyncStore<T: StoreValue>(options: StoreOptions<T>): Promise<Store<T>>
  declare export function initializeAsyncStore(moduleName: String, key: ?string): void
  declare export function createStore<T: StoreValue>(options: StoreOptions<T>): Store<T>
  declare export default createStore
}
