{"version":3,"file":"global-store.js","sources":["../ts/toVersionArray.ts","../ts/util.ts","../ts/shouldInvokeInitializer.ts","../ts/compareVersion.ts","../ts/createStore.ts","../ts/createAsyncStore.ts"],"sourcesContent":["import type { StoreVersion } from './types.js'\n\nexport type ParsedVersion = [number, number, number]\n\nexport function toVersionArray(v: StoreVersion): ParsedVersion {\n\treturn typeof v === 'number' ? [0, 0, v] : (v.split('.').map((v) => Number.parseInt(v, 10)) as ParsedVersion)\n}\n","import { compareVersion } from './compareVersion.js'\nimport type { createStore } from './createStore.js'\nimport { shouldInvokeInitializer } from './shouldInvokeInitializer.js'\nimport type { StoreInitializer, StoreValue, StoreVersion } from './types.js'\nimport type { StoreCreator, StoreId, Stores } from './typesInternal.js'\n\nexport function getStoreValue<T extends StoreValue>(stores: Stores, id: StoreId): T {\n\treturn getStore(stores, id).value as T\n}\n\nexport function initStoreValue<T extends StoreValue>(\n\tstores: Stores,\n\tid: StoreId,\n\tversion: StoreVersion,\n\tinitializer: StoreInitializer<T>\n) {\n\tconst store = getStore(stores, id)\n\tif (shouldInvokeInitializer(store.versions, version)) {\n\t\tstore.initializers.push(initializer as StoreInitializer<StoreValue>)\n\t\tstore.value = initializer(store.value as T, store.versions)\n\t\tstore.versions.push(version)\n\t}\n}\n\nexport function resetStoreValue(stores: Stores, id: StoreId) {\n\tconst store = getStore(stores, id)\n\tconst versions = store.versions\n\tstore.versions = []\n\tstore.value = store.initializers.reduce<StoreValue>((value, initializer, i) => {\n\t\tvalue = initializer(value, store.versions)\n\t\tstore.versions.push(versions[i])\n\t\treturn value\n\t}, {})\n}\n\nexport function getStore(stores: Stores, id: StoreId) {\n\tconst moduleStore = (stores[id.moduleName] = stores[id.moduleName] || Object.create(null))\n\tconst key = id.key ?? 'default'\n\treturn (moduleStore[key] = moduleStore[key] || { versions: [], value: {}, initializers: [] })\n}\n\nexport function resolveCreators(\n\tmoduleName: string,\n\tkey: string,\n\tstoreCreators: Array<StoreCreator<any>>,\n\tcs: typeof createStore\n) {\n\tsortByVersion(storeCreators).forEach(({ version, resolve, initializer }) =>\n\t\tresolve(cs({ moduleName, key, version, initializer }))\n\t)\n}\n\nexport function sortByVersion<S>(storeCreators: Array<StoreCreator<S>>) {\n\treturn storeCreators.sort((a, b) => compareVersion(a.version, b.version))\n}\n\nexport function freezeStoreValue(stores: Stores, id: StoreId, value?: StoreValue) {\n\tconst store = getStore(stores, id)\n\tstore.value = value ? (Object.isFrozen(value) ? value : Object.freeze(value)) : freezeValue(store.value)\n}\n\nfunction freezeValue(storeValue: StoreValue) {\n\tif (Object.isFrozen(storeValue)) throw TypeError('Frozen value cannot be freezed again')\n\n\tObject.keys(storeValue).forEach((k) => freezeIfIsArray(storeValue, k))\n\t// istanbul ignore next\n\tif (Object.getOwnPropertySymbols) {\n\t\tObject.getOwnPropertySymbols(storeValue).forEach((k) => freezeIfIsArray(storeValue, k))\n\t}\n\n\treturn Object.freeze(storeValue)\n}\n\nfunction freezeIfIsArray(storeValue: StoreValue, k: string | number | symbol) {\n\tconst value = storeValue[k]\n\tif (Array.isArray(value)) {\n\t\tstoreValue[k] = Object.freeze(value)\n\t}\n}\n","import { toVersionArray, type ParsedVersion } from './toVersionArray.js'\nimport type { StoreVersion } from './types.js'\n\nexport function shouldInvokeInitializer(versions: StoreVersion[], version: StoreVersion) {\n\tconst vs = versions.map(toVersionArray)\n\tconst v = toVersionArray(version)\n\treturn noMatchMajor(vs, v) || hasNewVersion(vs, v)\n}\n\nfunction noMatchMajor(versions: ParsedVersion[], version: ParsedVersion) {\n\treturn !versions.some((v) => v[0] === version[0])\n}\n\nfunction hasNewVersion(versions: ParsedVersion[], version: ParsedVersion) {\n\treturn versions\n\t\t.filter((v) => v[0] === version[0])\n\t\t.some((v) => version[1] > v[1] || (version[1] === v[1] && version[2] > v[2]))\n}\n","import { toVersionArray } from './toVersionArray.js'\nimport type { StoreVersion } from './types.js'\n\n/**\n * Compare version.\n * Positive when processed > current\n * Negative when processed < current\n */\nexport function compareVersion(processed: StoreVersion, current: StoreVersion) {\n\tconst v1 = toVersionArray(processed)\n\tconst v2 = toVersionArray(current)\n\treturn v1[0] !== v2[0] ? v1[0] - v2[0] : v1[1] !== v2[1] ? v1[1] - v2[1] : v1[2] - v2[2]\n}\n","import type { StoreOptions, StoreValue } from './types.js'\nimport type { Stores } from './typesInternal.js'\nimport { freezeStoreValue, getStoreValue, initStoreValue, resetStoreValue } from './util.js'\n\nexport type Store<T extends StoreValue> = {\n\t/**\n\t * The store value.\n\t */\n\treadonly value: T\n\t/**\n\t * Freezes the store value.\n\t * @param value Optional new store value.\n\t * If supplied, this value will be freezed and used as the store value.\n\t * You can use this update the store value and freeze part of it.\n\t * If not supplied,\n\t * the original value will be freezed and its array property will also be freezed.\n\t */\n\tfreeze(value?: { [k in keyof T]: Readonly<T[k]> }): void\n\t/**\n\t * Resets the store to its initial value.\n\t * You should only use this during testing.\n\t */\n\treset(): void\n}\n\nconst stores = Object.create(null) as Stores\n\n/**\n * Creates a store of type T.\n * @see https://www.npmjs.com/package/global-store\n */\nexport function createStore<T extends StoreValue>({\n\tmoduleName,\n\tkey,\n\tversion,\n\tinitializer\n}: StoreOptions<T>): Store<T> {\n\tconst id = { moduleName, key }\n\tinitStoreValue(stores, id, version, initializer)\n\n\treturn {\n\t\tget value() {\n\t\t\treturn getStoreValue<T>(stores, id)\n\t\t},\n\t\tfreeze(value) {\n\t\t\treturn freezeStoreValue(stores, id, value)\n\t\t},\n\t\treset() {\n\t\t\treturn resetStoreValue(stores, id)\n\t\t}\n\t}\n}\n","import { createStore, type Store } from './createStore.js'\nimport type { StoreOptions, StoreValue } from './types.js'\nimport type { StoreCreators } from './typesInternal.js'\nimport { resolveCreators } from './util.js'\n\nconst asyncStoreCreators = Object.create(null) as StoreCreators<Store<any>>\n\n/**\n * Creates a store of type T asynchronously.\n * @see https://github.com/unional/global-store#createAsyncStore\n */\nexport async function createAsyncStore<T extends StoreValue>({\n\tmoduleName,\n\tkey,\n\tversion,\n\tinitializer\n}: StoreOptions<T>): Promise<Store<T>> {\n\treturn new Promise((resolve) => {\n\t\tconst creatorsOfModules = (asyncStoreCreators[moduleName] = asyncStoreCreators[moduleName] || Object.create(null))\n\t\tconst k = key ?? 'default'\n\t\tconst storeCreators = (creatorsOfModules[k] = creatorsOfModules[k] || [])\n\t\tstoreCreators.push({ version, resolve, initializer })\n\t})\n}\n\n/**\n * Initializes the stores for `createAsyncStore()`.\n * @see https://github.com/unional/global-store#initializeAsyncStore\n */\nexport function initializeAsyncStore(moduleName: string, key?: string) {\n\tconst creatorsOfModules = asyncStoreCreators[moduleName]\n\tif (!creatorsOfModules) return\n\n\tconst keys = key ? [key] : Object.keys(creatorsOfModules)\n\tkeys.forEach((key) => resolveCreators(moduleName, key, creatorsOfModules[key], createStore))\n}\n"],"names":["toVersionArray","v","split","map","Number","parseInt","initStoreValue","stores","id","version","initializer","store","getStore","versions","vs","some","noMatchMajor","filter","hasNewVersion","shouldInvokeInitializer","initializers","push","value","moduleStore","moduleName","Object","create","key","resolveCreators","storeCreators","cs","sort","a","b","processed","current","v1","v2","compareVersion","sortByVersion","forEach","resolve","freezeStoreValue","isFrozen","freeze","storeValue","TypeError","keys","k","freezeIfIsArray","getOwnPropertySymbols","freezeValue","Array","isArray","createStore","getStoreValue","reset","reduce","i","resetStoreValue","asyncStoreCreators","async","Promise","creatorsOfModules"],"mappings":"yCAIM,SAAUA,EAAeC,GAC9B,MAAoB,iBAANA,EAAiB,CAAC,EAAG,EAAGA,GAAMA,EAAEC,MAAM,KAAKC,KAAKF,GAAMG,OAAOC,SAASJ,EAAG,KACxF,CCIM,SAAUK,EACfC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAQC,EAASL,EAAQC,ICbhB,SAAwBK,EAA0BJ,GACjE,MAAMK,EAAKD,EAASV,IAAIH,GAClBC,EAAID,EAAeS,GACzB,OAGD,SAAsBI,EAA2BJ,GAChD,OAAQI,EAASE,MAAMd,GAAMA,EAAE,KAAOQ,EAAQ,IAC/C,CALQO,CAAaF,EAAIb,IAOzB,SAAuBY,EAA2BJ,GACjD,OAAOI,EACLI,QAAQhB,GAAMA,EAAE,KAAOQ,EAAQ,KAC/BM,MAAMd,GAAMQ,EAAQ,GAAKR,EAAE,IAAOQ,EAAQ,KAAOR,EAAE,IAAMQ,EAAQ,GAAKR,EAAE,IAC3E,CAX+BiB,CAAcJ,EAAIb,EACjD,EDUKkB,CAAwBR,EAAME,SAAUJ,KAC3CE,EAAMS,aAAaC,KAAKX,GACxBC,EAAMW,MAAQZ,EAAYC,EAAMW,MAAYX,EAAME,UAClDF,EAAME,SAASQ,KAAKZ,GAEtB,CAagB,SAAAG,EAASL,EAAgBC,GACxC,MAAMe,EAAehB,EAAOC,EAAGgB,YAAcjB,EAAOC,EAAGgB,aAAeC,OAAOC,OAAO,MAC9EC,EAAMnB,EAAGmB,KAAO,UACtB,OAAQJ,EAAYI,GAAOJ,EAAYI,IAAQ,CAAEd,SAAU,GAAIS,MAAO,CAAA,EAAIF,aAAc,GACzF,CAEM,SAAUQ,EACfJ,EACAG,EACAE,EACAC,IAOK,SAA2BD,GAChC,OAAOA,EAAcE,MAAK,CAACC,EAAGC,IE7Cf,SAAeC,EAAyBC,GACvD,MAAMC,EAAKpC,EAAekC,GACpBG,EAAKrC,EAAemC,GAC1B,OAAOC,EAAG,KAAOC,EAAG,GAAKD,EAAG,GAAKC,EAAG,GAAKD,EAAG,KAAOC,EAAG,GAAKD,EAAG,GAAKC,EAAG,GAAKD,EAAG,GAAKC,EAAG,EACvF,CFyCqCC,CAAeN,EAAEvB,QAASwB,EAAExB,UACjE,EAPC8B,CAAcV,GAAeW,SAAQ,EAAG/B,UAASgC,UAAS/B,iBACzD+B,EAAQX,EAAG,CAAEN,aAAYG,MAAKlB,UAASC,kBAEzC,UAMgBgC,EAAiBnC,EAAgBC,EAAac,GAC7D,MAAMX,EAAQC,EAASL,EAAQC,GAC/BG,EAAMW,MAAQA,EAASG,OAAOkB,SAASrB,GAASA,EAAQG,OAAOmB,OAAOtB,GAGvE,SAAqBuB,GACpB,GAAIpB,OAAOkB,SAASE,GAAa,MAAMC,UAAU,wCAEjDrB,OAAOsB,KAAKF,GAAYL,SAASQ,GAAMC,EAAgBJ,EAAYG,KAE/DvB,OAAOyB,uBACVzB,OAAOyB,sBAAsBL,GAAYL,SAASQ,GAAMC,EAAgBJ,EAAYG,KAGrF,OAAOvB,OAAOmB,OAAOC,EACtB,CAbiFM,CAAYxC,EAAMW,MACnG,CAcA,SAAS2B,EAAgBJ,EAAwBG,GAChD,MAAM1B,EAAQuB,EAAWG,GACrBI,MAAMC,QAAQ/B,KACjBuB,EAAWG,GAAKvB,OAAOmB,OAAOtB,GAEhC,CGrDA,MAAMf,EAASkB,OAAOC,OAAO,MAMvB,SAAU4B,GAAkC9B,WACjDA,EAAUG,IACVA,EAAGlB,QACHA,EAAOC,YACPA,IAEA,MAAMF,EAAK,CAAEgB,aAAYG,OAGzB,OAFArB,EAAeC,EAAQC,EAAIC,EAASC,GAE7B,CACFY,YACH,OHpCa,SAAoCf,EAAgBC,GACnE,OAAOI,EAASL,EAAQC,GAAIc,KAC7B,CGkCUiC,CAAiBhD,EAAQC,EAChC,EACDoC,OAAOtB,GACCoB,EAAiBnC,EAAQC,EAAIc,GAErCkC,MAAK,IHvBS,SAAgBjD,EAAgBC,GAC/C,MAAMG,EAAQC,EAASL,EAAQC,GACzBK,EAAWF,EAAME,SACvBF,EAAME,SAAW,GACjBF,EAAMW,MAAQX,EAAMS,aAAaqC,QAAmB,CAACnC,EAAOZ,EAAagD,KACxEpC,EAAQZ,EAAYY,EAAOX,EAAME,UACjCF,EAAME,SAASQ,KAAKR,EAAS6C,IACtBpC,IACL,CAAE,EACN,CGeUqC,CAAgBpD,EAAQC,GAGlC,CC9CA,MAAMoD,EAAqBnC,OAAOC,OAAO,gCAMlCmC,gBAAsDrC,WAC5DA,EAAUG,IACVA,EAAGlB,QACHA,EAAOC,YACPA,IAEA,OAAO,IAAIoD,SAASrB,IACnB,MAAMsB,EAAqBH,EAAmBpC,GAAcoC,EAAmBpC,IAAeC,OAAOC,OAAO,MACtGsB,EAAIrB,GAAO,WACMoC,EAAkBf,GAAKe,EAAkBf,IAAM,IACxD3B,KAAK,CAAEZ,UAASgC,UAAS/B,eAAc,GAEvD,qDAMgB,SAAqBc,EAAoBG,GACxD,MAAMoC,EAAoBH,EAAmBpC,GAC7C,IAAKuC,EAAmB,QAEXpC,EAAM,CAACA,GAAOF,OAAOsB,KAAKgB,IAClCvB,SAASb,GAAQC,EAAgBJ,EAAYG,EAAKoC,EAAkBpC,GAAM2B,IAChF"}